JSON="../../lib/jsontool.js"
JSON0="../../lib/jsontool.js -o json-0"

# Basic -C usage:
# 1. Filter based on the check.
echo '{"age": 38}' | $JSON0 -C 'this.age > 30'
#        {
#          "age": 38
#        }
echo '{"age": 38}' | $JSON0 -C 'this.age < 30'
#        empty
echo '(empty output)'

# 2. -C switches mode to look at each array item if top-level input is an array
echo ''
echo '[{"age":38}, {"age": 42}, {"age":21}]' | $JSON0 -C 'this.age > 30'
#       [{"age":38},{"age": 42}]

# 3. -a still does its thing (flatten)
echo ''
echo '[{"age":38}, {"age": 42}, {"age":21}]' | $JSON -a -C 'this.age > 30'
#        {
#          "age": 38
#        }
#        {
#          "age": 42
#        }
echo '[{"age":38}, {"age": 42}, {"age":21}]' | $JSON -a -C 'this.age > 30' age
#        38
#        42

# Other stuff.
# Can filter on presence of a key.
echo ''
echo '[{"name":"apple", "fruit":"yes"}, {"name":"carrot"}]' | $JSON0 -C 'this.fruit'
#        [{"name":"apple","fruit":"yes"}]
echo '[{"name":"apple", "fruit":"yes"}, {"name":"carrot"}]' | $JSON -a -C 'this.fruit'
#        {
#          "name": "apple",
#          "fruit": "yes"
#        }
echo '[{"name":"apple", "fruit":"yes"}, {"name":"carrot"}]' | $JSON -a -C 'this.fruit' name
#        apple

# Syntax Error
echo ''
echo '{"foo": "bar"}' | $JSON -C 'foo foo' 2>&1 | grep SyntaxError
#    SyntaxError: Unexpected identifier
